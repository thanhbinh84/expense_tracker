// Mocks generated by Mockito 5.4.5 from annotations
// in expense_tracker/test/shared_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:expense_tracker/core/api/TrxApi.dart' as _i2;
import 'package:expense_tracker/core/model/trx.dart' as _i5;
import 'package:expense_tracker/core/repository/trx_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTrxApi_0 extends _i1.SmartFake implements _i2.TrxApi {
  _FakeTrxApi_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TrxRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrxRepository extends _i1.Mock implements _i3.TrxRepository {
  @override
  _i2.TrxApi get trxApi =>
      (super.noSuchMethod(
            Invocation.getter(#trxApi),
            returnValue: _FakeTrxApi_0(this, Invocation.getter(#trxApi)),
            returnValueForMissingStub: _FakeTrxApi_0(
              this,
              Invocation.getter(#trxApi),
            ),
          )
          as _i2.TrxApi);

  @override
  _i4.Stream<List<_i5.Trx>> getTrxList() =>
      (super.noSuchMethod(
            Invocation.method(#getTrxList, []),
            returnValue: _i4.Stream<List<_i5.Trx>>.empty(),
            returnValueForMissingStub: _i4.Stream<List<_i5.Trx>>.empty(),
          )
          as _i4.Stream<List<_i5.Trx>>);

  @override
  _i4.Future<void> saveTrx(_i5.Trx? trx) =>
      (super.noSuchMethod(
            Invocation.method(#saveTrx, [trx]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
